#!/usr/bin/env bash

set -Eeo pipefail

# USAGE: quote [SIZE]
# valid SIZE are short, medium, long, thick

file=~/.local/share/typist/quotes
if [ ! -f "$file" ]; then
    >&2 echo downloading quotes
    mkdir -p "$(dirname "$file")"
    if ! curl -sS --fail https://raw.githubusercontent.com/monkeytypegame/monkeytype/refs/heads/master/frontend/static/quotes/english.json | jq -r '.quotes[].text | sub("\n";" ";"g")' > "$file"; then
        rm "$file"
        exit 1
    fi
fi

usage=$(cat <<EOF
Usage: quote [options...] [<size>]

-n <num-quotes>     number of quotes (default 1)
                    or line-range in sed syntax, ex: 20,90

<size> can be short, medium, long, thick. if not specified
any size
EOF
)
n=1
while getopts ":hn:" opt; do
    case $opt in
    \?) # Invalid option
        >&2 echo "Error: Invalid option -$OPTARG"
        >&2 echo "$usage"
        exit 2
        ;;
    :) # Missing argument for an option
        >&2 echo "Error: Option -$OPTARG requires an argument"
        >&2 echo "$usage"
        exit 2
        ;;
    h)
        echo "$usage"
        exit 0
        ;;
    n)
        n="$OPTARG"
        ;;
    esac
done

shift $((OPTIND - 1))

nquotes() {
    if [[ "$n" == *,* ]]; then
        sed -n "${n}p"
    else
        shuf -n "$n"
    fi
}

if (($#>0)); then
    case "$1" in
    short)
        qsize='length >= 1 && length <= 100' ;;
    medium)
        qsize='length >= 101 && length <= 300' ;;
    long)
        qsize='length >= 301 && length <= 600' ;;
    thick)
        qsize='length >= 601' ;;
    *)
        >&2 echo invalid quote size. valid are short, medium, long, thick
        exit 2
        ;;
    esac
    awk "$qsize" "$file" | nquotes
else
    nquotes < "$file"
fi
